"use strict";const r=require("electron"),s=["msgRequestGetVersion","msgOpenExternalLink","msgOpenFile"],o=[];r.contextBridge.exposeInMainWorld("mainApi",{send:(e,...n)=>{if(s.includes(e))r.ipcRenderer.send.apply(null,[e,...n]),process.env.NODE_ENV==="development"&&console.log({type:"send",channel:e,request:n});else throw new Error(`Unknown ipc channel name: ${e}`)},on:(e,n)=>{if(o.includes(e))r.ipcRenderer.on(e,n);else throw new Error(`Unknown ipc channel name: ${e}`)},once:(e,n)=>{if(o.includes(e))r.ipcRenderer.once(e,n);else throw new Error(`Unknown ipc channel name: ${e}`)},off:(e,n)=>{if(o.includes(e))r.ipcRenderer.off(e,n);else throw new Error(`Unknown ipc channel name: ${e}`)},invoke:async(e,...n)=>{if(s.includes(e)){const i=await r.ipcRenderer.invoke.apply(null,[e,...n]);return process.env.NODE_ENV==="development"&&console.log({type:"invoke",channel:e,request:n,result:i}),i}throw new Error(`Unknown ipc channel name: ${e}`)}});
